{
  "healthCheck": {
    "interval": 30000,
    "timeout": 5000,
    "retries": 3,
    "endpoints": [
      "/health",
      "/api/health",
      "/api/status"
    ],
    "components": [
      "database",
      "plugins",
      "authentication",
      "file-system",
      "memory",
      "cpu"
    ]
  },
  "monitoring": {
    "enabled": true,
    "interval": 60000,
    "cpuThreshold": 0.8,
    "memoryThreshold": 0.85,
    "diskThreshold": 0.9,
    "responseTimeThreshold": 500,
    "errorRateThreshold": 0.05,
    "availabilityThreshold": 0.99
  },
  "alerts": {
    "enabled": true,
    "email": {
      "enabled": false,
      "smtp": {
        "host": "smtp.example.com",
        "port": 587,
        "secure": true
      },
      "recipients": ["admin@neutralapp.com"]
    },
    "webhook": {
      "enabled": false,
      "url": "https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK",
      "headers": {
        "Content-Type": "application/json"
      }
    },
    "slack": {
      "enabled": false,
      "webhookUrl": "https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK",
      "channel": "#alerts"
    },
    "deployment": {
      "verification": {
        "enabled": false,
        "webhookUrl": "https://hooks.slack.com/services/YOUR/DEPLOYMENT/WEBHOOK",
        "channel": "#deployments",
        "templates": {
          "verification_success": "‚úÖ Deployment verification completed successfully for {environment}",
          "verification_failure": "‚ùå Deployment verification failed for {environment}",
          "rollback_success": "üîÑ Rollback completed successfully for {environment} to version {version}",
          "rollback_failure": "üö® Rollback failed for {environment} to version {version}"
        }
      },
      "rollback": {
        "enabled": false,
        "webhookUrl": "https://hooks.slack.com/services/YOUR/ROLLBACK/WEBHOOK",
        "channel": "#rollbacks",
        "templates": {
          "rollback_started": "üîÑ Rollback started for {environment} to version {version}",
          "rollback_completed": "‚úÖ Rollback completed for {environment} to version {version}",
          "rollback_failed": "üö® Rollback failed for {environment} to version {version}"
        }
      }
    },
    "severity": {
      "critical": {
        "immediate": true,
        "retry": false,
        "escalation": true
      },
      "error": {
        "immediate": true,
        "retry": true,
        "escalation": false
      },
      "warning": {
        "immediate": false,
        "retry": true,
        "escalation": false
      },
      "info": {
        "immediate": false,
        "retry": false,
        "escalation": false
      }
    }
  },
  "logging": {
    "level": "info",
    "format": "json",
    "retention": {
      "days": 30,
      "maxSize": "100MB"
    },
    "structured": true,
    "context": {
      "includeUser": true,
      "includePlugin": true,
      "includeComponent": true
    }
  },
  "metrics": {
    "enabled": true,
    "collection": {
      "interval": 30000,
      "retention": "7d"
    },
    "aggregation": {
      "enabled": true,
      "intervals": ["1m", "5m", "15m", "1h", "1d"]
    },
    "export": {
      "prometheus": {
        "enabled": false,
        "port": 9090
      },
      "custom": {
        "enabled": false,
        "endpoint": "/api/metrics"
      }
    }
  },
  "performance": {
    "webVitals": {
      "enabled": true,
      "tracking": ["LCP", "FID", "CLS", "TTFB", "FCP"]
    },
    "profiling": {
      "enabled": false,
      "sampleRate": 0.1
    }
  },
  "plugins": {
    "healthCheck": {
      "enabled": true,
      "interval": 60000,
      "timeout": 10000
    },
    "performance": {
      "enabled": true,
      "tracking": ["loadTime", "memoryUsage", "errorRate"]
    }
  },
  "deployment": {
    "verification": {
      "enabled": true,
      "interval": 300000,
      "timeout": 60,
      "checks": [
        "application_health",
        "database_connection",
        "api_endpoints",
        "performance_metrics",
        "ssl_certificates",
        "dns_resolution",
        "load_balancer",
        "cdn_status"
      ]
    },
    "rollback": {
      "enabled": true,
      "autoRollback": true,
      "maxAttempts": 3,
      "threshold": 0.8,
      "verification": {
        "healthCheckAfterRollback": true,
        "smokeTestAfterRollback": true,
        "performanceCheckAfterRollback": true
      }
    }
  }
} 